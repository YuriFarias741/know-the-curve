{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * This will take a HEX or RGB web color. pSBC can shade it darker or lighter,\n * or blend it with a second color, and can also pass it right thru but convert\n * from Hex to RGB (Hex2RGB) or RGB to Hex (RGB2Hex).\n * All without you even knowing what color format you are using.\n *\n * @param {number} p - From 0 to 1 Percentage float (Required).\n * @param {string} from - From 0 to 1 Percentage float (Required).\n * @param {string} to - From 0 to 1 Percentage float (Required).\n * @returns {string|null} Either Hex or RGB color. Null if invalid color or percentage number.\n */\n\nexports.default = function (p, from, to) {\n  if (typeof p !== \"number\" || p < -1 || p > 1 || typeof from !== \"string\" || from[0] != \"r\" && from[0] != \"#\" || to && typeof to !== \"string\") return null; // ErrorCheck\n\n  var sbcRip = function sbcRip(d) {\n    var l = d.length;\n    var RGB = {};\n\n    if (l > 9) {\n      d = d.split(\",\");\n      if (d.length < 3 || d.length > 4) return null; // ErrorCheck\n\n      RGB[0] = i(d[0].split(\"(\")[1]), RGB[1] = i(d[1]), RGB[2] = i(d[2]), RGB[3] = d[3] ? parseFloat(d[3]) : -1;\n    } else {\n      if (l == 8 || l == 6 || l < 4) return null; // ErrorCheck\n\n      if (l < 6) d = \"#\" + d[1] + d[1] + d[2] + d[2] + d[3] + d[3] + (l > 4 ? \"\" + d[4] + d[4] : \"\"); // 3 or 4 digit\n\n      d = i(d.slice(1), 16), RGB[0] = d >> 16 & 255, RGB[1] = d >> 8 & 255, RGB[2] = d & 255, RGB[3] = -1;\n      if (l == 9 || l == 5) RGB[3] = r(RGB[2] / 255 * 10000) / 10000, RGB[2] = RGB[1], RGB[1] = RGB[0], RGB[0] = d >> 24 & 255;\n    }\n\n    return RGB;\n  };\n\n  var i = parseInt;\n  var r = Math.round;\n  var h = from.length > 9;\n  var h = typeof to === \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h;\n  var b = p < 0;\n  var p = b ? p * -1 : p;\n  var to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\";\n  var f = sbcRip(from);\n  var t = sbcRip(to);\n  if (!f || !t) return null; // ErrorCheck\n\n  if (h) return \"rgb\" + (f[3] > -1 || t[3] > -1 ? \"a(\" : \"(\") + r((t[0] - f[0]) * p + f[0]) + \",\" + r((t[1] - f[1]) * p + f[1]) + \",\" + r((t[2] - f[2]) * p + f[2]) + (f[3] < 0 && t[3] < 0 ? \")\" : \",\" + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 10000) / 10000 : t[3] < 0 ? f[3] : t[3]) + \")\");\n  return \"#\" + (0x100000000 + r((t[0] - f[0]) * p + f[0]) * 0x1000000 + r((t[1] - f[1]) * p + f[1]) * 0x10000 + r((t[2] - f[2]) * p + f[2]) * 0x100 + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 255) : t[3] > -1 ? r(t[3] * 255) : f[3] > -1 ? r(f[3] * 255) : 255)).toString(16).slice(1, f[3] > -1 || t[3] > -1 ? undefined : -2);\n};","map":{"version":3,"sources":["/home/lifeapp/pessoal/know-the-curve-web/node_modules/shade-blend-color/index.js"],"names":["Object","defineProperty","exports","value","default","p","from","to","sbcRip","d","l","length","RGB","split","i","parseFloat","slice","r","parseInt","Math","round","h","b","f","t","toString","undefined"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * This will take a HEX or RGB web color. pSBC can shade it darker or lighter,\n * or blend it with a second color, and can also pass it right thru but convert\n * from Hex to RGB (Hex2RGB) or RGB to Hex (RGB2Hex).\n * All without you even knowing what color format you are using.\n *\n * @param {number} p - From 0 to 1 Percentage float (Required).\n * @param {string} from - From 0 to 1 Percentage float (Required).\n * @param {string} to - From 0 to 1 Percentage float (Required).\n * @returns {string|null} Either Hex or RGB color. Null if invalid color or percentage number.\n */\n\nexports.default = function(p, from, to) {\n  if (\n    typeof p !== \"number\" ||\n    p < -1 ||\n    p > 1 ||\n    typeof from !== \"string\" ||\n    (from[0] != \"r\" && from[0] != \"#\") ||\n    (to && typeof to !== \"string\")\n  )\n    return null; // ErrorCheck\n  var sbcRip = function sbcRip(d) {\n    var l = d.length;\n    var RGB = {};\n    if (l > 9) {\n      d = d.split(\",\");\n      if (d.length < 3 || d.length > 4) return null; // ErrorCheck\n      (RGB[0] = i(d[0].split(\"(\")[1])),\n        (RGB[1] = i(d[1])),\n        (RGB[2] = i(d[2])),\n        (RGB[3] = d[3] ? parseFloat(d[3]) : -1);\n    } else {\n      if (l == 8 || l == 6 || l < 4) return null; // ErrorCheck\n      if (l < 6)\n        d =\n          \"#\" +\n          d[1] +\n          d[1] +\n          d[2] +\n          d[2] +\n          d[3] +\n          d[3] +\n          (l > 4 ? \"\" + d[4] + d[4] : \"\"); // 3 or 4 digit\n      (d = i(d.slice(1), 16)),\n        (RGB[0] = (d >> 16) & 255),\n        (RGB[1] = (d >> 8) & 255),\n        (RGB[2] = d & 255),\n        (RGB[3] = -1);\n      if (l == 9 || l == 5)\n        (RGB[3] = r((RGB[2] / 255) * 10000) / 10000),\n          (RGB[2] = RGB[1]),\n          (RGB[1] = RGB[0]),\n          (RGB[0] = (d >> 24) & 255);\n    }\n    return RGB;\n  };\n  var i = parseInt;\n  var r = Math.round;\n  var h = from.length > 9;\n  var h =\n    typeof to === \"string\"\n      ? to.length > 9\n      ? true\n      : to == \"c\"\n        ? !h\n        : false\n      : h;\n  var b = p < 0;\n  var p = b ? p * -1 : p;\n  var to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\";\n  var f = sbcRip(from);\n  var t = sbcRip(to);\n  if (!f || !t) return null; // ErrorCheck\n  if (h)\n    return (\n      \"rgb\" +\n      (f[3] > -1 || t[3] > -1 ? \"a(\" : \"(\") +\n      r((t[0] - f[0]) * p + f[0]) +\n      \",\" +\n      r((t[1] - f[1]) * p + f[1]) +\n      \",\" +\n      r((t[2] - f[2]) * p + f[2]) +\n      (f[3] < 0 && t[3] < 0\n        ? \")\"\n        : \",\" +\n        (f[3] > -1 && t[3] > -1\n          ? r(((t[3] - f[3]) * p + f[3]) * 10000) / 10000\n          : t[3] < 0\n            ? f[3]\n            : t[3]) +\n        \")\")\n    );\n  return (\n    \"#\" +\n    (\n      0x100000000 +\n      r((t[0] - f[0]) * p + f[0]) * 0x1000000 +\n      r((t[1] - f[1]) * p + f[1]) * 0x10000 +\n      r((t[2] - f[2]) * p + f[2]) * 0x100 +\n      (f[3] > -1 && t[3] > -1\n        ? r(((t[3] - f[3]) * p + f[3]) * 255)\n        : t[3] > -1\n          ? r(t[3] * 255)\n          : f[3] > -1\n            ? r(f[3] * 255)\n            : 255)\n    )\n      .toString(16)\n      .slice(1, f[3] > -1 || t[3] > -1 ? undefined : -2)\n  );\n};\n\n"]},"metadata":{},"sourceType":"script"}