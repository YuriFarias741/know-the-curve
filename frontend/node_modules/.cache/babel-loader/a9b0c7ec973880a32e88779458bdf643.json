{"ast":null,"code":"import _regeneratorRuntime from\"/home/lifeapp/pessoal/know-the-curve-web/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/lifeapp/pessoal/know-the-curve-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as _ from'lodash';export var fetchCoutryResources=function fetchCoutryResources(country){return new Promise(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve,reject){var response,responseJson,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"http://localhost:8000/api/\".concat(country,\"/\"));case 3:response=_context.sent;_context.next=6;return response.json();case 6:responseJson=_context.sent;data=Object.keys(responseJson).map(function(key){return{state:key,data:_.get(responseJson,key)};});resolve(data);_context.next=15;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.log(_context.t0);reject(_context.t0);case 15:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return function(_x,_x2){return _ref.apply(this,arguments);};}());};","map":{"version":3,"sources":["/home/lifeapp/pessoal/know-the-curve-web/src/services/api.ts"],"names":["_","fetchCoutryResources","country","Promise","resolve","reject","fetch","response","json","responseJson","data","Object","keys","map","key","state","get","console","log"],"mappings":"mPACA,MAAO,GAAKA,CAAAA,CAAZ,KAAmB,QAAnB,CAGA,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAClCC,OADkC,CAEF,CAChC,MAAO,IAAIC,CAAAA,OAAJ,0FAAY,iBAAOC,OAAP,CAAgBC,MAAhB,uLAEQC,CAAAA,KAAK,qCAA8BJ,OAA9B,MAFb,QAETK,QAFS,qCAGYA,CAAAA,QAAQ,CAACC,IAAT,EAHZ,QAGTC,YAHS,eAITC,IAJS,CAIFC,MAAM,CAACC,IAAP,CAAYH,YAAZ,EAA0BI,GAA1B,CAA8B,SAAAC,GAAG,CAAI,CAChD,MAAO,CACLC,KAAK,CAAED,GADF,CAELJ,IAAI,CAAEV,CAAC,CAACgB,GAAF,CAAMP,YAAN,CAAoBK,GAApB,CAFD,CAAP,CAID,CALY,CAJE,CAUfV,OAAO,CAACM,IAAD,CAAP,CAVe,iFAYfO,OAAO,CAACC,GAAR,cACAb,MAAM,aAAN,CAbe,qEAAZ,mEAAP,CAgBD,CAnBM","sourcesContent":["import axios from 'axios';\nimport * as _ from 'lodash';\nimport {CountryResources} from '../interfaces/map-interface';\n\nexport const fetchCoutryResources = (\n  country: string\n): Promise<CountryResources[]> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/${country}/`);\n      const responseJson = await response.json();\n      const data = Object.keys(responseJson).map(key => {\n        return {\n          state: key,\n          data: _.get(responseJson, key),\n        };\n      });\n      resolve(data);\n    } catch (err) {\n      console.log(err);\n      reject(err);\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"module"}